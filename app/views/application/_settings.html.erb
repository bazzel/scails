<%= render(ModalDialogComponent.new(title: t('.title'))) do |m| %>
  <%= m.with_controller do %>
    <%= render(PlainTooltipComponent.new(tooltip: t('.tooltip'), position: :bottom)) do %>
      <button type="button" class="standard-icon-button">
        <span class="sr-only"><%= t(".title") %></span>
        <%= inline_svg_tag("icons/cog-6-tooth.svg") %>
      </button>
    <% end %>
  <% end %>
  <%= m.with_body do %>
    <%= form_with model: @scale_settings, url: root_path, method: :get, data: { modal_dialog_component_target: "form" } do |form| %>
      <div class="relative mb-6">
        <%= form.select :root_note, ChromaticScale::NOTES, {}, class: "form-select peer" %>
        <%= form.label :root_note,
                   class: "form-label sm:bg-surface-container-high bg-surface-container" %>
        <p class="form-text"><%= t("helpers.supporting_text.scale_settings.root_note") %></p>
      </div>
      <div class="relative mb-6">
        <%= form.label :tempo, class: "text-base block mt-2" %>
        <%= render(SliderComponent.new(form: form, scale_settings: @scale_settings)) %>
      </div>
      <div class="relative mb-6">
        <%= form.label(
          :loop,
          class: "flex justify-between items-center cursor-pointer gap-2",
        ) do |builder| %>
          <div>
            <div class="text-base"><%= t("helpers.label.scale_settings.loop") %></div>
            <div class="text-xs text-on-surface-variant"><%= t("helpers.supporting_text.scale_settings.loop") %></div>
          </div>
          <%= form.check_box :loop, class: "sr-only peer" %>
          <div class="form-switch peer"></div>
        <% end %>
      </div>
      <div class="relative mb-6">
        <%= form.select :pattern_name,
                    Tone.pattern_names.map { |k, v| [v, k] },
                    {},
                    class: "form-select peer" %>
        <%= form.label :pattern_name,
                   class: "form-label sm:bg-surface-container-high bg-surface-container" %>
      </div>

      <div class="relative mb-6">
        <%= label_tag nil,
        t("helpers.label.scale_settings.sound"),
        class: "text-base block mt-2 mb-2" %>
        <div class="mb-2 text-xs font-medium"><%= t("helpers.label.scale_settings.wave") %></div>
        <%= render(OscillatorTypesComponent.new(form: form, collection: Tone.waves)) %>
        <div class="mt-4 mb-2 text-xs font-medium"><%= t("helpers.label.scale_settings.prefix") %></div>
        <%= render(OscillatorPrefixesComponent.new(form: form, collection: Tone.prefixes)) %>
        <div class="mt-4 text-xs font-medium"><%= t("helpers.label.scale_settings.partials_range") %></div>
        <%= render(
          OscillatorPartialsRangeComponent.new(
            form: form,
            partials_range: Tone.partials_range,
          ),
        ) %>
      </div>
    <% end %>
  <% end %>
  <%= m.with_footer do %>
    <%= button_tag t("actions.cancel"),
    class: "button text-button",
    type: "button",
    data: {
      action: "modal-dialog-component#close",
    } %>
    <%= button_tag t("actions.save"),
    class: "button text-button",
    data: {
      action: "modal-dialog-component#submitForm",
    } %>
  <% end %>
<% end %>
