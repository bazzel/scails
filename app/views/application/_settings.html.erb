<%= render(ModalComponent.new(title: "Settings")) do |m| %>
  <%= m.with_controller do %>
    <%= render(PlainTooltipComponent.new(tooltip: "Settings", position: :bottom)) do %>
      <button type="button" class="standard-icon-button">
        <span class="sr-only">Settings</span>
        <%= inline_svg_tag("icons/cog-6-tooth.svg") %>
      </button>
    <% end %>
  <% end %>
  <%= m.with_body do %>
    <%= form_with model: @scale_settings, url: root_path, method: :get, data: { modal_component_target: "form" } do |form| %>
      <div class="relative mb-6">
        <%= form.select :root_note, ChromaticScale::NOTES, {}, class: "form-select peer" %>
        <%= form.label :root_note,
                   "Root note",
                   class: "form-label sm:bg-surface-container-high bg-surface-container" %>
        <p class="form-text">Select the root note to start with.</p>
      </div>
      <div class="relative mb-6">
        <%= form.label :tempo, "Tempo", class: "text-base block mt-2" %>
        <%= render(SliderComponent.new(form: form, scale_settings: @scale_settings)) %>
      </div>
      <div class="relative mb-6">
        <%= form.label(
          :loop,
          class: "flex justify-between items-center cursor-pointer gap-2",
        ) do |builder| %>
          <div>
            <div class="text-base">Loop</div>
            <div class="text-xs text-on-surface-variant">Keep playing until you click the Stop button</div>
          </div>
          <%= form.check_box :loop, class: "sr-only peer" %>
          <div class="form-switch peer"></div>
        <% end %>
      </div>
      <div class="relative mb-6">
        <%= form.select :pattern_name,
                    @pattern_names_and_labels,
                    {},
                    class: "form-select peer" %>
        <%= form.label :pattern_name,
                   "Pattern",
                   class: "form-label sm:bg-surface-container-high bg-surface-container" %>
      </div>

      <div class="relative mb-6">
        <%= label_tag nil, "Sound", class: "text-base block mt-2 mb-4" %>
        <%= render(OscillatorOptionsComponent.new(form: form, waves: Tone.waves)) %>
      </div>
    <% end %>
  <% end %>
  <%= m.with_footer do %>
    <%= button_tag "Cancel",
    class: "button text-button",
    type: "button",
    data: {
      action: "modal-component#close",
    } %>
    <%= button_tag "Save changes",
    class: "button text-button",
    data: {
      action: "modal-component#submitForm",
    } %>
  <% end %>
<% end %>
